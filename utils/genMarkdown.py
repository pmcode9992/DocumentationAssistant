def formatSummary(filestr, summary, indent = 0):
    output = ""
    if isinstance(filestr, dict):
        for item, value in filestr.items():
            if value is None and not summary:
                output += ("     " * indent+ f"{value}\n")
            elif isinstance(value, str) and summary:
                output += f"#{item}\n\n{value}\n"
            else:
                output += formatSummary(value, summary, indent + 1)
    else:
        for i in filestr:
            output += formatSummary(i, summary, indent+ 1)
    return output
        

def genMarkdown(projName, projSummary, longSummary):
    with open(f"{projName}.md", 'w', encoding='utf-8') as f:
        f.write(f"##{projName}\n\n")
        f.write(projSummary)
        f.write("\n\n")
        formatted_longSummary = formatSummary(longSummary, True)
        f.write(formatted_longSummary)
        
projSummary = """The project is a web application developed using React for creating a platform called Signature Scribbles. The application includes features like journaling, user authentication using Firebase, and social media integration. The technologies used include React, Firebase (for authentication), and Tailwind CSS for styling. The project consists of various components such as Navbar, Carousel, Login, About, Home, Benefits, Contact, and Nopage. The functionalities of the application include displaying information about the company, showcasing benefits of journaling, providing contact details, and allowing users to log in using Google authentication. The application also includes a responsive design with animations for improved user experience."""

longSummary = {
  "üìÅ :sign": [
    {
      "project_Summary.pdf": "Not a code file"
    },
    {
      "üìÅ :src": [
        {
          "index.js": "# Project Documentation\n\nThis project uses React to render the main application component `App` into the root element of the HTML document.\n\n## Imports\n```javascript\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n```\n\n- **React**: The core library for building user interfaces in React.\n- **ReactDOM**: Provides DOM-specific methods that can be used at the top level of a web app.\n- **'./index.css'**: Stylesheet for the project.\n- **App**: The main application component.\n- **reportWebVitals**: A function to measure the performance of the app.\n\n## Functionalities\n```javascript\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n```\n\n- Creates a root for rendering the React application.\n- Renders the `App` component inside a `React.StrictMode` to highlight potential problems in the code.\n\n```javascript\nreportWebVitals();\n```\n\n- Calls the `reportWebVitals` function to measure the performance of the app.\n\n## Additional Notes\n- The `ReactDOM.createRoot` function is used to create a root for rendering React components. This is a new feature in React 18.\n- The `React.StrictMode` component is used for highlighting potential problems in the code and deprecated features.\n- The `reportWebVitals` function can be passed a function to log performance results or send them to an analytics endpoint."
        },
        {
          "index.css": "# Project Documentation\n\nThis project is a front-end web development project that utilizes Tailwind CSS for styling and incorporates Google Fonts for typography.\n\n## Imports\n\n```css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* Fonts */\n@import url('https://fonts.googleapis.com/css2?family=Cormorant+Infant:wght@300&family=Josefin+Sans:wght@200;400&display=swap');\n```\n\n## Functionalities\n\n### 1. Base styles\nThe `@tailwind base;` import brings in the base styles provided by Tailwind CSS, setting up the foundational styles for elements like headings, paragraphs, and lists.\n\n### 2. Components\nThe `@tailwind components;` import includes pre-styled components like buttons, forms, and cards that can be easily used in the project.\n\n### 3. Utilities\nThe `@tailwind utilities;` import provides utility classes for quick styling adjustments such as margin, padding, text alignment, and more.\n\n### 4. Google Fonts\nThe `@import url('https://fonts.googleapis.com/css2?family=Cormorant+Infant:wght@300&family=Josefin+Sans:wght@200;400&display=swap');` import brings in the Cormorant Infant and Josefin Sans fonts from Google Fonts, providing additional typography options for the project."
        },
        {
          "üìÅ :components": [
            {
              "Navbar.js": "# Project Documentation - Navbar Component\n\nThis documentation provides an overview of the Navbar component in the project. The Navbar component is responsible for rendering the navigation bar at the top of the application.\n\n## Imports\n```jsx\nimport React from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport Logo from '../assets/Logo.png';\n```\n\n## Functionalities\n- **Navbar Component:** The Navbar component is a functional component that renders the navigation bar with links to different sections of the application.\n- **navitems:** An array containing objects with the name and link of each navigation item.\n- **Conditional Rendering:** Depending on whether the user is logged in or not, the Navbar component displays either a \"Log in\" button or the user's display name.\n\n```jsx\nfunction Navbar({ getdets, userCred }) {\n  const navitems = [\n    { name: \"Home\", link: \"#Home\" },\n    { name: \"About\", link: \"#About\" },\n    { name: \"Benefits of Journalling\", link: \"#Benefits\" },\n    { name: \"Contact\", link: \"#Contact\" },\n  ];\n\n  return (\n    <>\n      <div className=\"bg-custom-brown\">\n        <nav className=\"bg-custom-brown scroll w-full z-20 top-0 start-0 border-b border-gray-200 md:pt-12 sm:pt-6\">\n          <div className=\"flex flex-wrap items-center justify-between mx-auto bg-custom-brown md:p-5  text-custom-white font-josefin items-center border-y-2 border-custom-white sm:p-2\">\n              <span className=\"self-center md:text-2xl font-semibold whitespace-nowrap dark:text-white sm:text-xl\">\n                <img className=\"md:w-[13.1875rem] md:h-[4rem] sm:w-[8rem] sm:h-[3rem]\" src={Logo} alt=\"\" />\n              </span>\n         \n            {userCred == null ? (\n              <div className=\"flex md:order-2 space-x-3 md:space-x-0 rtl:space-x-reverse\"> \n                <button\n                  onClick={getdets}\n                  type=\"button\"\n                  className=\"text-white focus:ring-4  font-medium rounded-lg text-sm md:px-4 md:py-2 sm:px-2 sm:py-1 text-center\"\n                >\n                  Log in\n                </button>{\" \"}\n              </div>\n            ) : (\n              <div className=\"flex md:order-2 space-x-3 md:space-x-0 rtl:space-x-reverse \">{userCred.user.displayName}</div>\n            )}\n\n            <div\n              className=\"items-center justify-between hidden w-full md:flex md:w-auto md:order-1\"\n              id=\"navbar-sticky\"\n            >\n              <ul className=\"flex flex-col p-4 md:p-0 mt-4 font-medium rounded-lg space-x-10 rtl:space-x-reverse md:flex-row md:mt-0  \">\n                {navitems.map((item, index) => (\n                  <li key={index}>\n                    <a\n                      href={item.link}\n                      className=\"font-josefin font-thin block py-2 px-3 text-white text-[18px] rounded md:bg-transparent md:p-0\"\n                      aria-current=\"page\"\n                    >\n                      {item.name}\n                    </a>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </nav>\n\n        <Outlet />\n      </div>\n    </>\n  );\n}\n\nexport default Navbar;\n```\n\nThis documentation provides a clear understanding of the Navbar component, its functionalities, and how it is implemented in the project."
            },
            {
              "Carousel.js": "# Project Documentation: Carousel Component\n\n## Brief Explanation\nThis code snippet shows a React component called Carousel, which utilizes the Swiper library to create a carousel slider with coverflow effect and autoplay functionality.\n\n## Imports\n```javascript\nimport React, { useEffect, useState } from 'react';\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/css\";\nimport \"swiper/css/effect-coverflow\";\nimport 'swiper/css/pagination';\nimport { EffectCoverflow, Autoplay, Pagination } from \"swiper/modules\";\nimport img1 from \"../assets/carousel/Frame 3692.png\";\nimport img2 from \"../assets/carousel/Frame 3693.png\";\nimport img3 from \"../assets/carousel/Frame 3694.png\";\nimport img4 from \"../assets/carousel/Frame 3695.png\";\nimport img5 from \"../assets/carousel/Frame 3696.png\";\n```\n\n## Functionalities\n- `Carousel`: This function component takes a prop `sPV` (slidesPerView) and renders a Swiper carousel with coverflow effect and autoplay.\n  ```javascript\n  function Carousel({sPV}) {\n      const imgs = [img1, img2, img3, img4, img5];\n\n      return (\n          <Swiper\n              effect={\"coverflow\"}\n              grabCursor={true}\n              centeredSlides={true}\n              loop={true}\n              slidesPerView={sPV}\n              coverflowEffect={{\n                  rotate: 0,\n                  stretch: 0,\n                  depth: 100,\n                  modifier: 2.5,\n                  slideShadows: false\n              }}\n              autoHeight={false}\n              speed={2000}\n              autoplay={{ delay: 2500, disableOnInteraction: false }}\n              pagination={{ clickable: false }}\n              modules={[EffectCoverflow, Autoplay, Pagination]}\n              className={`lg: h-[400px] block rounded-t-[60px] rounded-b-[100px] md:h-[300px] sm:h-[250px]`}\n          >\n              {imgs.map((img, index) => (\n                  <SwiperSlide key={index}>\n                      <div>\n                          <img src={img} className={`h-[350px] w-[800px] md:h-[280px] w-full sm:h-[240px] w-full`} />\n                      </div>\n                  </SwiperSlide>\n              ))}\n          </Swiper>\n      );\n  }\n  ```\n\n## Explanation\n- The `Carousel` component renders a Swiper carousel with coverflow effect using the Swiper library.\n- It accepts a prop `sPV` which determines the number of slides visible at a time.\n- The component maps through an array of image paths and renders them as slides within the carousel.\n- Various Swiper configurations such as effect, autoplay, pagination, etc., are set within the Swiper component.\n\nThis documentation provides a clear overview of the Carousel component, its functionalities, and the necessary imports for the code snippet."
            }
          ]
        },
        {
          "üìÅ :firebase": [
            {
              "authsetup.js": "# Firebase Authentication UI Documentation\n\nThis documentation provides information on how to use Firebase Authentication UI in your project.\n\n## Imports\n```javascript\nvar firebase = require(\"firebase\");\nvar firebaseui = require(\"firebaseui\");\n```\n\n## Functionalities\n\n### Initialize Firebase Authentication UI\n```javascript\nvar ui = new firebaseui.auth.AuthUI(firebase.auth());\n```\n\n### Start Firebase Authentication UI with Sign-in Options\n```javascript\nui.start(\"#firebaseui-auth-container\", {\n  signInOptions: [\n    {\n      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      signInMethod: firebase.auth.EmailAuthProvider.EMAIL_LINK_SIGN_IN_METHOD,\n    },\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n  ],\n  // Other config options...\n});\n```\n\n### Check for Email Link Sign-in\n```javascript\nif (ui.isPendingRedirect()) {\n  ui.start(\"#firebaseui-auth-container\", uiConfig);\n}\n// This can also be done via:\nif (firebase.auth().isSignInWithEmailLink(window.location.href)) {\n  ui.start(\"#firebaseui-auth-container\", uiConfig);\n}\n```\n\nThis documentation provides a brief explanation of the code, imports used, and the functionalities of the Firebase Authentication UI implementation in the project."
            },
            {
              "config.js": "# Project Documentation\n\nThis documentation provides an overview of the Firebase configuration and authentication setup in the project.\n\n## Imports\n```javascript\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup, setPersistence, signInWithRedirect, inMemoryPersistence } from \"firebase/auth\";\n```\n\n## Firebase Configuration\n```javascript\nconst firebaseConfig = {\n  apiKey: \"\",\n  authDomain: \"signaturescribbles-e4059.firebaseapp.com\",\n  databaseURL: \"https://signaturescribbles-e4059-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"signaturescribbles-e4059\",\n  storageBucket: \"signaturescribbles-e4059.appspot.com\",\n  messagingSenderId: \"864005954640\",\n  appId: \"1:864005954640:web:674c9dd3ba6848af980555\",\n  measurementId: \"G-KML261HL10\"\n};\n```\n\n## Functionality\n- Initialize Firebase and get analytics\n```javascript\nexport const app = initializeApp(firebaseConfig);\nexport const analytics = getAnalytics(app);\n```\n\n- Get authentication instance and set persistence\n```javascript\nexport const auth = getAuth(app)\n// setPersistence(auth, inMemoryPersistence)\n//   .then(() => {\n//     const provider = new GoogleAuthProvider();\n//     // In memory persistence will be applied to the signed in Google user\n//     // even though the persistence was set to 'none' and a page redirect\n//     // occurred.\n//     return signInWithRedirect(auth, provider);\n//   })\n//   .catch((error) => {\n//     // Handle Errors here.\n//     const errorCode = error.code;\n//     const errorMessage = error.message;\n//   });\n```\n\nThis code initializes Firebase with the provided configuration, sets up analytics, and handles authentication using Google provider with in-memory persistence."
            }
          ]
        },
        {
          "üìÅ :pages": [
            {
              "About.js": "# About Component Documentation\n\n## Brief Explanation\nThe About component is a React functional component that displays information about a particular entity or organization. It includes an animation that triggers when the viewer scrolls to a specific location on the page.\n\n## Imports\n```javascript\nimport img2 from \"../assets/about.jpeg\";\nimport ScrollAnimation from \"react-animate-on-scroll\";\nimport Pattern from \"../assets/Pattern.svg\";\nimport { useEffect, useLayoutEffect, useState } from \"react\";\n```\n\n## Functionalities\n- The component includes state variables `writerimg`, `pattern`, and `aboutus` using the `useState` hook to manage the animation and content display.\n- The `useEffect` hook is used to add an event listener to the window scroll event and trigger the animation when the viewer scrolls to a specific position on the page.\n- The `handleScroll` function changes the state variables based on the scroll position to reveal the animation.\n- The component renders HTML elements with dynamic classes based on the state variables to achieve the desired animation effect.\n\n```javascript\nfunction About() {\n    const [writerimg, setWriterimg] = useState(\"hidden rounded-tr-[15rem] w-[34.6875rem] h-[42.53156rem] ml-10\");\n    const [pattern, setPattern] = useState(\"hidden\");\n    const [aboutus, setAboutus] = useState(\"p-10 ml-20 mb-40 lg:w-1/2\");\n\n    useEffect(() => {\n        const handleScroll = () => {\n            if(window.scrollY > 350){\n                setPattern(\"animate-side-ways-spin\");\n                setWriterimg(\"animate-side-ways rounded-tr-[15rem] w-[34.6875rem] h-[42.53156rem] ml-10\");\n                setAboutus(\"animate-bottom-up p-10 ml-20 mb-40 lg:w-1/2\");\n            }\n        };\n\n        window.addEventListener('scroll', handleScroll);\n        return () => window.removeEventListener('scroll', handleScroll);\n    }, []);\n\n    return (\n        <div className=\"bg-custom-white flex\" id=\"About\">\n            <div className=\"pattern absolute z-0 left-1/3 mt-36 hidden lg:block opacity-25 transition \">\n                <img src={Pattern} alt=\"\" className={pattern}/>\n            </div>\n\n            <div className=\"w-1/2 p-10 mt-20 z-10 hidden lg:block lg:w-1/2\">\n                <img\n                    className={writerimg}\n                    src={img2}\n                    alt=\"\"\n                />\n            </div>\n\n            <div className={aboutus}>\n                <div className=\"font-josefin mt-20 pb-5 pt-20\">\n                    <h2 className=\"border-t border-b border-solid p-1 border-custom-yellow font-josefin leading-[77.1%] tracking-[0.25313rem] inline\">\n                        ABOUT US\n                    </h2>\n                </div>\n                <h1 className=\"text-4xl font-cormorant font-black pb-5 text-[2.5rem] text-custom-light-text\">\n                    Where Pages Pulse with Possibility.\n                </h1>\n                <p className=\" font-josefin leading-8 text-[1.25rem] leading-7 text-custom-lighter-text\">\n                    We're not just journal sellers; we're architects of imagination. Our journey began with the belief that pen and paper wield transformative power. Crafting elegance, we champion individuality. Your unique story finds its canvas here. With unwavering commitment, we invite you to explore, create, and turn moments into memories. Welcome to creativity's sanctuary. Welcome to Signature Scribbles.\n                </p>\n            </div>\n        </div>\n    );\n}\n\nexport default About;\n```"
            },
            {
              "Home.js": "# Project Documentation\n\n## Home Component\n\nThe `Home` component is a functional component that renders the homepage of the application. It displays a brief introduction to the product and provides buttons to explore more information. It also includes components for 'About', 'Benefits', and 'Contact' sections.\n\n### Imports:\n```javascript\nimport img1 from \"../assets/img1.jpg\";\nimport About from \"./About\";\nimport Benefits from \"./Benefits\";\nimport Contact from \"./Contact\";\n```\n\n- `img1`: Importing the image file `img1.jpg` from the assets folder.\n- `About`: Importing the About component to display information about the product.\n- `Benefits`: Importing the Benefits component to showcase the benefits of the product.\n- `Contact`: Importing the Contact component to provide contact information.\n\n### Functionalities:\n```javascript\nfunction Home({ userCred }) {\n  return (\n    <>\n      // Home section with product introduction and button\n      <div className=\"flex bg-custom-brown md:h-[45rem] sm:h-[30rem]\" id=\"Home\">\n        // Left section with product introduction\n        <div className=\"md:p-10 sm:p-2 md:w-1/2 sm:w-2/3 md:h-full md:mt-20 sm:mt-10\">\n          // Product introduction text\n          <div className=\"text-custom-white md:text-center md:mt-10\">\n            <p className=\"font-cormorant font-thin  leading-tight animate-bottom-up-fast md:p-5  md:text-5xl sm:text-2xl sm:p-1\">\n              Ink Your Identity, Bind Your Thoughts, Elevate Your Journaling\n              with Signature Scribbles\n            </p>\n            <p className=\"font-josefin md:text-3xl sm:text-l md:mb-10 sm:mb-2 font-thin\">\n              Elevating Expression, One Page at a Time.\n            </p>\n          </div>\n          // Button to explore more\n          <div className=\"flex md:justify-center lg:justify-start sm:justify-start\">\n            <button className=\"border border-solid border-custom-yellow text-custom-white md:mx-10 md:py-5 md:px-10 sm:py-2 sm:px-3 text-2xl font-josefin\">\n              <a\n                href=\"https://www.instagram.com/signature.scribbles/\"\n                target=\"_blank\"\n              >\n                Know more\n              </a>\n            </button>\n          </div>\n        </div>\n        \n        // Right section with image\n        <div className=\"mt-4 lg:mr-20 sm:mr-2 p-0 md:w-1/2 sm:w-1/3\">\n          // Image section\n          <div className=\"rounded-t-[50rem] bg-custom-white px-10 pt-10 bg-opacity-5 backdrop-blur-[25.5px] h-[47rem]\">\n            <img\n              className=\"animate-bottom-up rounded-t-[50rem] z-1 relative box-shadow-2xl md:h-[47rem]\"\n              src={img1}\n              alt=\"\"\n            />\n          </div>\n        </div>\n      </div>\n      \n      // Display About section\n      <About />\n      \n      // Display Benefits section\n      <Benefits />\n      \n      // Display Contact section\n      <Contact />\n    </>\n  );\n}\n\nexport default Home;\n```\n\nThe `Home` component renders the homepage with a product introduction, button to explore more, and sections for 'About', 'Benefits', and 'Contact'. The component imports necessary assets and components to display the content effectively."
            },
            {
              "Login.js": "# Login Component Documentation\n\nThis component is responsible for rendering the login interface using Firebase authentication. It utilizes the Firebase Auth SDK and FirebaseUI for authentication purposes.\n\n## Imports\n```javascript\nimport { useEffect } from \"react\";\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport firebase from \"firebase/compat/app\";\nimport * as firebaseui from \"firebaseui\";\nimport \"firebaseui/dist/firebaseui.css\";\nimport { app, auth } from \"../firebase/config\";\nimport { GoogleAuthProvider } from \"firebase/auth\";\n```\n\n## Functionalities\n1. **Initialization of FirebaseUI AuthUI Instance**\n```javascript\nconst ui = firebaseui.auth.AuthUI.getInstance() || new firebaseui.auth.AuthUI(auth);\n```\nThis code snippet initializes the FirebaseUI AuthUI instance using the existing instance or creates a new one using the `auth` object.\n\n2. **Effect Hook for Firebase Authentication**\n```javascript\nuseEffect(() => {\n    // Configuration object for FirebaseUI\n    var uiConfig = {\n        callbacks: {\n            signInSuccessWithAuthResult: function(authResult, redirectUrl) {\n                // User successfully signed in\n                // Return type determines further actions\n                return true;\n            },\n            uiShown: function() {\n                // Hide the loader once the UI is rendered\n                document.getElementById('loader').style.display = 'none';\n            }\n        },\n        signInFlow: 'popup',\n        signInSuccessUrl: '/',\n        signInOptions: [\n            {\n                provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n                clientID: \"YOUR_GOOGLE_CLIENT_ID\"\n            }\n        ],\n        tosUrl: '/terms',\n        privacyPolicyUrl: '/privacy'\n    };\n    // Start the FirebaseUI with the specified configuration\n    ui.start(\"#firebaseui-auth-container\", uiConfig);\n}, []);\n```\nThis code snippet sets up the FirebaseUI configuration and initializes the FirebaseUI instance with the specified configuration when the component mounts.\n\n3. **Login Interface Rendering**\n```javascript\nreturn (\n    <>\n      <h4>Signature Scribbles Login</h4>\n      <div id=\"firebaseui-auth-container\"></div>\n      <div id=\"loader\">Loading...</div>\n    </>\n);\n```\nThis code snippet renders the login interface with the specified title and UI elements.\n\nThis documentation provides an overview of the Login component, including its imports and functionalities for handling Firebase authentication."
            },
            {
              "Nopage.js": "# Project Documentation\n\nThis project documentation provides an overview of the code and functionality of the Nopage component.\n\n## Nopage Component\n\nThe Nopage component is a functional component in React that simply displays the text \"Nopage\".\n\n### Imports\n```javascript\nimport React from 'react'\n```\n\nThe code snippet above imports the React library which is necessary for building React components.\n\n### Functionality\n```javascript\nfunction Nopage() {\n  return (\n    <div>Nopage</div>\n  )\n}\n```\n\nThe `Nopage` function is a functional component that returns a JSX element with the text \"Nopage\". This component can be used to display a message when a page is not found.\n\n```javascript\nexport default Nopage\n```\n\nThe `export default Nopage` statement exports the Nopage component so that it can be imported and used in other parts of the application.\n\nThis documentation provides a brief explanation of the Nopage component, its imports, and functionality in Markdown format as per the guidelines."
            },
            {
              "Contact.js": "# Project Documentation\n\nThis document provides an overview of the Contact component in the project. The Contact component displays various contact buttons and social media links for the Signature Scribbles website.\n\n## Imports\n```javascript\nimport logo from \"../assets/contact_logo.png\";\n```\n\n## Functionality\n- **contactButtons**: An array containing the names of contact buttons (\"Home\", \"About\", \"Contact Us\").\n- **paths**: An array of SVG path data for social media icons.\n- **socials**: An array of social media URLs.\n\n```javascript\nfunction Contact() {\n  const contactButtons = [\"Home\", \"About\", \"Contact Us\"];\n\n  const paths = [\n    // SVG path data for different social media icons\n  ];\n\n  const socials = [\n    \"https://www.facebook.com/signature.scribbles/\",\n    \"https://www.instagram.com/signature.scribbles/\",\n    \"https://www.threads.net/@signature.scribbles\"\n  ]; \n\n  return (\n    // JSX code to display contact buttons, social media icons, and copyright information\n  );\n}\n```\n\nThe `Contact` component renders a section with contact buttons, social media icons, and copyright information for the Signature Scribbles website. The component uses the imported logo for display.\n\n- The contact buttons are displayed as links in a horizontal row.\n- Social media icons are displayed as SVG images with links to respective social media profiles.\n- Copyright information is displayed at the bottom of the section.\n\nBy following the guidelines and including the relevant information in the documentation, users can easily understand the purpose and functionality of the Contact component in the project."
            },
            {
              "Benefits.js": "# Benefits Component Documentation\n\nThis document provides an overview of the Benefits component in the project. The Benefits component is responsible for displaying the benefits of journaling and includes a carousel for displaying information.\n\n## Imports\n```javascript\nimport Carousel from \"../components/Carousel\";\nimport { useEffect, useState } from \"react\";\n```\n- **Carousel**: This import is used to include the Carousel component in the Benefits component.\n- **useEffect, useState**: These imports are used from React to manage component side effects and state respectively.\n\n## Functionalities\n- The Benefits component includes a state variable `benefitsClass` which is used to control the CSS classes applied to certain elements based on scroll position.\n- The `useEffect` hook is used to add an event listener to the window scroll event. When the window scroll position exceeds 1000 pixels, the `benefitsClass` state is updated to trigger an animation effect.\n- The component returns a JSX structure that displays the benefits section with a title and carousel component based on screen size.\n\n```javascript\nfunction Benefits() {\n      const [benefitsClass, setBenefitsClass]= useState(\"hidden flex flex-col justify-center \")\n      useEffect(() => {\n          const handleScroll = () => {\n            if(window.scrollY > 1000){\n              setBenefitsClass(\"animate-bottom-up flex flex-col justify-center \")\n            }\n  \n          };\n          window.addEventListener('scroll', handleScroll);\n          return () => window.removeEventListener('scroll', handleScroll);\n        }, []);\n      \n  return (\n    <div className=\" bg-custom-brown p-28\" id=\"Benefits\">\n      <div className={benefitsClass}>\n        <h1 className=\"text-center relative p-1 font-josefin text-[1rem] tracking-[0.5rem] mb-6\">\n          <span className=\"border-t border-b p-2 border-solid border-y-custom-yellow text-custom-white\">\n            BENEFITS\n          </span>\n        </h1>\n        <h1 className=\"text-center font-cormorant font-bold md:text-[2.65rem] text-custom-white leading-[2.61688rem] mb-9 sm:text-[2rem]\">\n          Benefits of Journaling\n        </h1>\n      </div>\n      <div className=\"lg:block md:hidden sm:hidden hidden\">\n        <Carousel sPV={2}/>\n      </div>\n      <div className=\"lg:hidden md:block sm:block\">\n        <Carousel sPV={1}/>\n      </div>\n    </div>\n  );\n}\n\nexport default Benefits;\n```\n\nThis Markdown document provides a structured overview of the Benefits component in the project, explaining its imports and functionalities."
            }
          ]
        },
        {
          "App.js": "# Project Documentation\n\n## App Component\n\n### Imports:\n```javascript\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Navbar from \"./components/Navbar\";\nimport Nopage from \"./pages/Nopage\";\nimport Login from \"./pages/Login\";\nimport { auth } from \"./firebase/config.js\";\nimport { GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport React, { useState } from \"react\";\n```\n\n### Functionality:\n- The `App` component is the main component of the project.\n- It utilizes React Router for navigation and authentication with Firebase.\n- It includes the `Navbar`, `Home`, `Login`, and `Nopage` components.\n- It uses Firebase's authentication methods to handle user credentials.\n\n### Code Snippets:\n```javascript\nconst [userCred, setUserCred] = useState(auth.currentUser);\n\nconst getdets = async () => {\n  const userData = await signInWithPopup(auth, new GoogleAuthProvider());\n  setUserCred(userData);\n  console.log(userCred);\n};\n\n<BrowserRouter>\n  <Routes>\n    <Route element={<Navbar getdets={getdets} userCred={userCred} />}>\n      <Route index element={<Home userCred={userCred} />} />\n      <Route element={<Login />} path=\"/login\" />\n      <Route element={<Nopage />} path=\"*\" />\n    </Route>\n  </Routes>\n</BrowserRouter>\n```\n\n### Explanation:\n- The `App` component uses React's `useState` hook to manage the current user's credentials.\n- The `getdets` function is an asynchronous function that uses Firebase's `signInWithPopup` method to authenticate the user with Google.\n- The component structure includes a `BrowserRouter` with nested `Routes` and `Route` components for navigation.\n- The `Navbar` component is passed the `getdets` function and `userCred` state as props.\n- The `Home`, `Login`, and `Nopage` components are rendered based on the route configuration."
        }
      ]
    }
  ]
}

genMarkdown("Signature Scribbles", projSummary, longSummary)